#!/usr/bin/env python3

import sys
import datetime
import getpass
import requests

SERVER_URL = "http://localhost:8080"
group = ""
token = ""

def sendPostRequest(subdomain, payload):
	payload["group"] = group
	payload["token"] = token
	r = requests.post(SERVER_URL + subdomain, json=payload)
	if r.status_code == 500:
		print("There is a problem with the server. Please try again later.")
		exit()
	else:
		return r


def selectGroup():
	global group
	while group == "":
		command = input("Enter your Group name or type 'Create Group': ").strip()
		if command.lower() == "create group":
			groupName = input("Choose a Group name: ").strip()
			validDate = False
			while validDate == False:
				eventDate = input("Choose a date for your Secret Santa: [YYYY/MM/DD] ").split("/")
				try :
					for i in range(3):
						eventDate[i] = int(eventDate[i])
					eventDate = datetime.date(eventDate[0], eventDate[1], eventDate[2])
					validDate = True
				except:
					print("Sorry, that doesn't seem to be a valid date.")
			response = sendPostRequest("/creategroup", {"groupName":groupName, "date":eventDate.isoformat()})
			if response.status_code == 403:
				print("Sorry, that Group name is taken.")
			else:
				group = groupName
				print("Your group has been created.")
		else:
			response = sendPostRequest("/findgroup", {"groupName":command})
			if response.status_code == 403:
				print("Sorry, that is not a valid Group name.")
			else:
				group = command


def signIn():
	global token
	while token == "":
		userName = input("Please enter your Name: ").strip().capitalize()
		passWord = getpass.getpass("Please enter your Password: ")
		response = sendPostRequest("/signin", {"user": userName, "pass": passWord})
		if response.status_code == 404:
			print("That person is not in this group.")
			createAccount = input("Would you like register as a new member? [Y/N] ").strip().lower()
			if createAccount == "y":
				signUp(userName)
		elif response.status_code == 403:
			print("Sorry, that password isn't quite right.")
		else:
			token = response.text
			print("You are now signed in!")


def signUp(userName):
	global token
	passWord = getpass.getpass("Please choose a Password: ")
	repeatPassWord = getpass.getpass("Please confirm your Password: ")
	while passWord != repeatPassWord:
		print("Sorry, your passwords don't match.")
		passWord = getpass.getpass("Please choose a Password: ")
		repeatPassWord = getpass.getpass("Please confirm your Password: ")
	response = sendPostRequest("/signup", {"user": userName, "pass": passWord})
	token = response.text
	print("You are now signed in!")


def checkStatus():
	response = sendPostRequest("/home", {})
	print(response.text)
	if response.status_code == 201:
		drawNames = input("Would you like to draw names now? [Y/N] ").strip().lower()
		if drawNames == "y":
			response = sendPostRequest("/draw", {})


def chatManager():
	selectChat = ""
	while selectChat != "exit":
		response = sendPostRequest("/chats", {})
		print(response.text)

		chats = response.text.split('\n')
		sentChats = chats[1:chats.index("Received Chats:")]
		receivedChats = chats[chats.index("Received Chats:")+1:]

		print("Choose a chat to continue it, or type another name to start a new one.")
		selectChat = input("Who would you like to chat with? ").strip().capitalize()

		if (selectChat in sentChats) or (selectChat in receivedChats):
			chatType = "sent" if (selectChat in sentChats) else "received"
			displayChats(chatType, selectChat)
		elif selectChat != "exit":
			sendChat("send", selectChat, True)
	
def displayChats(chatType, chatee):
	response = sendPostRequest("/viewChat", {"type":chatType, "chatee":chatee})
	print(response.text)
	continueChat = input("Would you like to continue this chat? [Y/N] ").strip().lower()
	if continueChat == "y":
		sendChat(chatType, chatee, False)


def sendChat(chatType, chatee, new):
	message = input("What would you like to say? ").strip()
	response = sendPostRequest("/sendChat", {"type":chatType, "chatee":chatee, "message":message, "create":new})
	print("Your message has been sent.")


def wishListManager(command):
	command = command.split()
	if len(command) > 1:
		displayWishList(command[1].capitalize())
	else:
		wishlister = input("Who's wishlist would you like to see? ").strip().capitalize()
		displayWishList(wishlister)

def displayWishList(wishlister):
	response = sendPostRequest("/viewWishList", {"wishlister":wishlister})
	if response.status_code == 404:
		print("Sorry, that person is not in this group.")
	else:
		print(response.text)
		if response.status_code == 201:
			updateWishList()

def updateWishList():
	changeItem = input("Would you like to add or delete an item from your wishlist? [Add/Delete/No] ").strip().lower()
	if changeItem == "add":
		addToWishList()
	elif changeItem == "delete":
		deleteItem = input("What is the name of the item you would like to remove? ").strip().capitalize()
		response = sendPostRequest("/removeWishList", {"item": deleteItem})
		if response.status_code == 404:
			print("Sorry, that item is not on your list.")
		else:
			print("Your wishlist has been updated.")


def addToWishList():
	newItem = input("What is the name of the item you would like to add? ").strip().capitalize()
	itemLink = input("If you would like to add a link, please enter it now: ").strip()
	validURL = False
	while itemLink != "" and not(validURL):
		print("Sorry, that is not a valid URL. (Type in the entire name, including the 'https://...'")
		itemLink = input("If you would like to add a link, please enter it now: [Enter to skip] ").strip()
		try:
			response = requests.get(itemLink)
			if response.status_code == 200:
				validURL = True
		except:
			pass
	if itemLink == "":
		itemLink = None
	response = sendPostRequest("/addWishList", {"item": newItem, "link": itemLink})
	if response.status_code == 403:
		print("Sorry, that item is already on your list.")
	else:
		print("Your wishlist has been updated.")


def mainLoop():
	command = ""
	while command != "exit":
		command = input("What would you like to do? ").strip().lower()
		if command == "chat":
			chatManager()
		elif command.split()[0] == "wishlist":
			wishListManager(command)


print("Welcome to Clause CLI: the Command Line Interface for Secret Santa!")
selectGroup()
signIn()
checkStatus()
mainLoop()
print("Good Job!")

