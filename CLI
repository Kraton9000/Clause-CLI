#!/usr/bin/env python3

import datetime

import modules.serverFunctions as serverFunctions
from modules.controlFunctions import *
from modules.chatClasses import *
from modules.wishListClasses import *


class inputManager():
	def mainLoop(self):
		command = getInput("What would you like to do? ").strip().lower()
		if command == "chat":
			addManager(chatManager())
		elif command.split()[0] == "wishlist":
			addManager(wishListViewManager())
		else:
			print("Sorry, that is not a valid command.")


def selectGroup():
	while serverFunctions.group == "":
		command = getInput("Enter your Group name or type 'Create Group': ").strip()
		if command.lower() == "create group":
			groupName = getInput("Choose a Group name: ").strip()
			validDate = False
			while validDate == False:
				eventDate = input("Choose a date for your Secret Santa: [YYYY/MM/DD] ").split("/")
				try :
					for i in range(3):
						eventDate[i] = int(eventDate[i])
					eventDate = datetime.date(eventDate[0], eventDate[1], eventDate[2])
					if eventDate < datetime.date.today():
						print("Sorry, you can not choose a date in the past.")
					else:
						validDate = True
				except:
					print("Sorry, that doesn't seem to be a valid date.")
			response = serverFunctions.sendPostRequest("/creategroup", {"groupName":groupName, "date":eventDate.isoformat()})
			if response.status_code == 403:
				print("Sorry, that Group name is taken.")
			else:
				serverFunctions.group = groupName
				print("Your group has been created.")
		else:
			response = serverFunctions.sendPostRequest("/findgroup", {"groupName":command})
			if response.status_code == 403:
				print("Sorry, that is not a valid Group name.")
			else:
				serverFunctions.group = command


def checkStatus():
	response = serverFunctions.sendPostRequest("/home", {})
	print(response.text)
	if response.status_code == 201:
		drawNames = input("Would you like to draw names now? [Y/N] ").strip().lower()
		if drawNames == "y":
			response = serverFunctions.sendPostRequest("/draw", {})


print("Welcome to Clause CLI: the Command Line Interface for Secret Santa!")
# ---------------------------------------------------------------------------------------------------------------
# REMOVE THESE LINES IF YOU ARE HOSTING YOUR OWN SERVER AND WISH TO USE CLAUSE CLI
print("The developer has shut down the server for this application. Using just the CLI is now non-functional.")
print("Feel free to use the server code provided in the git repo to host a server yourself.")
print("Thanks for using Clause CLI!")
exit()
# ---------------------------------------------------------------------------------------------------------------
selectGroup()
serverFunctions.signIn()
checkStatus()
managerStack.append(inputManager())
while True:
	managerStack[-1].mainLoop()

